{"version":3,"sources":["components/Form.js","components/СontactList.js","components/Filter.js","App.js","index.js"],"names":["Form","onAdd","useState","id","setId","name","setName","number","setNumber","state","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","type","pattern","title","onChange","required","ContactList","contacts","handleDelete","map","onClick","Filter","handleChange","filter","App","setContacts","setFilter","useEffect","storageContacts","localStorage","getItem","parsedStorageContacts","JSON","parse","setItem","stringify","className","data","inputNameId","uuidv4","find","contact","alert","event","normalizedFilter","toLowerCase","includes","getVisibleContacts","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAEe,SAASA,EAAT,GAA0B,IAAVC,EAAS,EAATA,MAC7B,EAAoBC,mBAAS,IAA7B,mBAAOC,EAAP,KAAWC,EAAX,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KACMC,EAAQ,CAAEN,KAAIE,OAAME,UAQpBG,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,cAAlBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MAEd,OAAQR,GACN,IAAK,KACHD,EAAMS,GACN,MAEF,IAAK,OACHP,EAAQO,GACR,MAEF,IAAK,SACHL,EAAUK,GACV,MAEF,QACE,SAIAC,EAAQ,WACZV,EAAM,IACNE,EAAQ,IACRE,EAAU,KAGZ,OACE,uBAAMO,SAlCa,SAACJ,GACpBA,EAAEK,iBACFf,EAAMQ,GACNK,KA+BA,UACE,uDAEE,uBACEG,KAAK,OACLZ,KAAK,OACLQ,MAAOR,EACPa,QAAQ,yHACRC,MAAM,kcACNC,SAAUV,EACVW,UAAQ,OAGZ,+EAEE,uBACEJ,KAAK,MACLZ,KAAK,SACLQ,MAAON,EACPW,QAAQ,yFACRC,MAAM,giBACNC,SAAUV,EACVW,UAAQ,OAIZ,wBAAQJ,KAAK,SAAb,4BClEN,IAeeK,EAfK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,SAAUC,EAAmB,EAAnBA,aAC/B,OACE,6BACCD,EAASE,KAAI,gBAAGtB,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACZ,+BACGF,EADH,KACWE,EACT,wBAAQU,KAAK,SAASS,QAAS,kBAAMF,EAAarB,IAAlD,sBAFOA,SCGAwB,EAPA,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAjB,OACb,qCACE,sDACA,uBAAOZ,KAAK,OAAOG,SAAUQ,EAAcf,MAAOgB,Q,cCEvC,SAASC,IACtB,MAAgC5B,mBAAS,IAAzC,mBAAOqB,EAAP,KAAiBQ,EAAjB,KACA,EAA4B7B,mBAAS,IAArC,mBAAO2B,EAAP,KAAeG,EAAf,KAEAC,qBAAU,WACR,IAAMC,EAAkBC,aAAaC,QAAQ,YACvCC,EAAwBC,KAAKC,MAAML,GACrCG,GACFN,EAAYM,KAEb,IAEHJ,qBAAU,WACRE,aAAaK,QAAQ,WAAYF,KAAKG,UAAUlB,MAC/C,CAACA,IA6BJ,OACE,sBAAKmB,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,6CAEF,cAAC1C,EAAD,CAAMC,MAhCY,SAAC0C,GACrB,IAAMC,EAAcC,cACpBF,EAAKxC,GAAKyC,EACWrB,EAASuB,MAAK,SAACC,GAAD,OAAaA,EAAQ1C,OAASsC,EAAKtC,QAEpE2C,MAAM,GAAD,OAAIL,EAAKtC,KAAT,6BAGP0B,GAAY,SAACtB,GAAD,OAAYkC,GAAZ,mBAAqBlC,UAyB/B,gCACE,0CACA,cAAC,EAAD,CAAQmB,aAxBS,SAACqB,GACtBjB,EAAUiB,EAAMrC,cAAcC,QAuBYgB,OAAQA,IAC9C,cAAC,EAAD,CACEN,SAlBmB,WACzB,IAAM2B,EAAmBrB,EAAOsB,cAIhC,OAHgC5B,EAASM,QAAO,SAACkB,GAAD,OAC9CA,EAAQ1C,KAAK8C,cAAcC,SAASF,MAetBG,GACV7B,aAvBc,SAAC8B,GACrBvB,GAAY,SAACtB,GAAD,OAAWA,EAAMoB,QAAO,qBAAG1B,KAAgBmD,iBClC3DC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a72f4248.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Form({ onAdd }) {\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const state = { id, name, number };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAdd(state);\r\n    reset();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    switch (name) {\r\n      case 'id':\r\n        setId(value);\r\n        break;\r\n\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    setId('');\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  \r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Имя\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        Телефон\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleInputChange}\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n};\r\n\r\n","import React from 'react';\r\n\r\nconst ContactList = ({ contacts, handleDelete }) => {\r\n  return  (\r\n    <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id}>\r\n        {name}: {number}\r\n        <button type=\"button\" onClick={() => handleDelete(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n  )\r\n}\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\n\r\nconst Filter = ({ handleChange, filter }) => (\r\n  <>\r\n    <p>Find contacts by name</p>\r\n    <input type=\"text\" onChange={handleChange} value={filter} />\r\n  </>\r\n);\r\n\r\nexport default Filter;\r\n","import { useEffect, useState } from 'react';\nimport Form from './components/Form';\nimport ContactsList from './components/СontactList';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const storageContacts = localStorage.getItem('contacts');\n    const parsedStorageContacts = JSON.parse(storageContacts);\n    if (parsedStorageContacts) {\n      setContacts(parsedStorageContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const createContact = (data) => {\n    const inputNameId = uuidv4();\n    data.id = inputNameId;\n    const isInContacts = contacts.find((contact) => contact.name === data.name);\n    if (isInContacts) {\n      alert(`${data.name} is already in contacts.`);\n      return;\n    }\n    setContacts((state) => [data, ...state]);\n  };\n\n  const onFilterChange = (event) => {\n    setFilter(event.currentTarget.value);\n  };\n\n  const deleteContact = (contactId) => {\n    setContacts((state) => state.filter(({ id }) => id !== contactId));\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    const resultedVisibleContacts = contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return resultedVisibleContacts;\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Phonebook</h1>\n      </header>\n      <Form onAdd={createContact} />\n      <div>\n        <h2>CONTACTS</h2>\n        <Filter handleChange={onFilterChange} filter={filter} />\n        <ContactsList\n          contacts={getVisibleContacts()}\n          handleDelete={deleteContact}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}